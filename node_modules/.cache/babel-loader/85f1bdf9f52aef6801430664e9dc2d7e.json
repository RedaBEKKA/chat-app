{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Bureau/chat-app/src/components/ChatFeed.jsx\";\nimport MessageForm from \"./MessageForm\";\nimport Mymessage from \"./Mymessage\";\nimport Theirmessage from \"./Theirmessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat];\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(Mymessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Theirmessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-receipts\",\n          style: {\n            marginRight: isMyMessage ? '18px' : '0px',\n            marginLeft: isMyMessage ? '0px' : '68px'\n          },\n          children: \"read-receipts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, `msg_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Chatfeed\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["/home/ubuntu/Bureau/chat-app/src/components/ChatFeed.jsx"],"names":["MessageForm","Mymessage","Theirmessage","ChatFeed","props","chats","activeChat","userName","messages","chat","renderMessages","keys","Object","map","key","index","message","lastMessageKey","isMyMessage","sender","username","width","marginRight","marginLeft"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AACvB,QAAM;AAAEC,IAAAA,KAAF;AAAQC,IAAAA,UAAR;AAAmBC,IAAAA,QAAnB;AAA4BC,IAAAA;AAA5B,MAAyCJ,KAA/C;AAEA,QAAMK,IAAI,GAAGJ,KAAK,IAAIA,KAAK,CAACC,UAAD,CAA3B;;AAEA,QAAMI,cAAc,GAAG,MAAK;AACxB,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,QAAZ,CAAb;AACA,WAAOG,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAKC,KAAL,KAAe;AAC3B,YAAMC,OAAO,GAAGR,QAAQ,CAACM,GAAD,CAAxB;AACA,YAAMG,cAAc,GAAGF,KAAK,KAAK,CAAV,GAAY,IAAZ,GAAiBJ,IAAI,CAACI,KAAK,GAAC,CAAP,CAA5C;AACA,YAAMG,WAAW,GAAGX,QAAQ,KAAKS,OAAO,CAACG,MAAR,CAAeC,QAAhD;AAEA,0BACI;AAA0B,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAjC;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAEQH,WAAW,gBACT,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADS,gBAEV,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAJT;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,KAAK,EAAE;AAACI,YAAAA,WAAW,EAACJ,WAAW,GAAC,MAAD,GAAQ,KAAhC;AAAsCK,YAAAA,UAAU,EAACL,WAAW,GAAC,KAAD,GAAO;AAAnE,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA,SAAW,OAAMH,KAAM,EAAvB;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH,KApBM,CAAP;AAqBH,GAvBD;;AAyBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnCD;;KAAMZ,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import MessageForm from \"./MessageForm\"\nimport Mymessage from \"./Mymessage\"\nimport Theirmessage from \"./Theirmessage\"\n\nconst ChatFeed = (props) =>{\n    const { chats,activeChat,userName,messages } = props;\n\n    const chat = chats && chats[activeChat]\n    \n    const renderMessages = () =>{\n        const keys = Object.keys(messages);\n        return keys.map((key,index) => {\n            const message = messages[key]\n            const lastMessageKey = index === 0?null:keys[index-1];\n            const isMyMessage = userName === message.sender.username;\n\n            return(\n                <div key={`msg_${index}`} style={{width:'100%'}}>\n                    <div className=\"message-block\">\n                        {\n                            isMyMessage \n                            ? <Mymessage/>\n                            :<Theirmessage/>\n\n                        }\n                    </div>\n                    <div className=\"read-receipts\" style={{marginRight:isMyMessage?'18px':'0px',marginLeft:isMyMessage?'0px':'68px'}}>\n                        read-receipts\n                    </div>\n                </div>\n            )\n        })\n    }\n    \n    return(\n        <div>\n            Chatfeed\n        </div>\n    )\n}\n\n\nexport default ChatFeed"]},"metadata":{},"sourceType":"module"}